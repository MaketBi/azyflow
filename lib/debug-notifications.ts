/**
 * Script de debug pour les notifications WhatsApp et email
 * √Ä ex√©cuter dans la console du navigateur pour diagnostiquer les probl√®mes
 */

// Test des notifications avec donn√©es r√©elles
async function debugNotifications() {
  console.log('üîç DEBUG: Syst√®me de notifications');
  console.log('=====================================');

  // 1. V√©rifier la configuration admin
  console.log('1. V√©rification admin...');
  
  try {
    const response = await fetch('/api/debug-admin'); // Endpoint √† cr√©er si besoin
    // OU directement via Supabase si vous avez acc√®s
    console.log('Admin configur√© ‚úÖ');
  } catch (error) {
    console.log('‚ùå Erreur r√©cup√©ration admin:', error);
  }

  // 2. Test d'envoi email
  console.log('\n2. Test email...');
  
  try {
    const emailTest = await fetch('https://your-project.supabase.co/functions/v1/send-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer your-anon-key'
      },
      body: JSON.stringify({
        type: 'email',
        notification: {
          to: 'test@example.com',
          subject: 'Test email notification',
          html: '<h1>Test email</h1><p>Email fonctionne !</p>'
        }
      })
    });
    
    const emailResult = await emailTest.json();
    console.log('üìß Email test result:', emailResult);
    
  } catch (error) {
    console.log('‚ùå Erreur test email:', error);
  }

  // 3. Test d'envoi WhatsApp
  console.log('\n3. Test WhatsApp...');
  
  try {
    const whatsappTest = await fetch('https://your-project.supabase.co/functions/v1/send-notification', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer your-anon-key'
      },
      body: JSON.stringify({
        type: 'whatsapp',
        notification: {
          to: '+33761604943',
          message: 'üß™ Test WhatsApp\n\nCeci est un message de test du syst√®me de notifications Azyflow.'
        }
      })
    });
    
    const whatsappResult = await whatsappTest.json();
    console.log('üì± WhatsApp test result:', whatsappResult);
    
  } catch (error) {
    console.log('‚ùå Erreur test WhatsApp:', error);
  }
}

// Test simplifi√© pour v√©rifier la configuration
async function checkConfig() {
  console.log('‚öôÔ∏è  Configuration Check');
  console.log('======================');

  // V√©rifier les URLs et endpoints
  const currentUrl = window.location.origin;
  console.log('üåê Current URL:', currentUrl);
  
  // Simuler un appel de notification
  try {
    const testData = {
      freelancerName: 'Test Freelancer',
      freelancerEmail: 'freelancer@test.com',
      adminName: 'Admin Test',
      adminEmail: 'admin@test.com',
      adminPhone: '+33761604943',
      clientName: 'Client Test',
      month: '09',
      year: 2025,
      workedDays: 20,
      timesheetId: 'test-123'
    };

    console.log('üìã Test data prepared:', testData);
    console.log('‚úÖ Configuration semble correcte');
    
    return testData;
    
  } catch (error) {
    console.log('‚ùå Erreur configuration:', error);
  }
}

// Instructions d'utilisation
console.log('üìö Scripts de debug disponibles:');
console.log('- checkConfig() : V√©rifier la configuration');
console.log('- debugNotifications() : Test complet des notifications');
console.log('\n‚ö†Ô∏è  Note: Vous devez d\'abord configurer:');
console.log('1. Le num√©ro de t√©l√©phone admin en base');
console.log('2. Les variables WASENDER_API_KEY dans Supabase');
console.log('3. La variable RESEND_API_KEY dans Supabase');

// Auto-run de la v√©rification de config
checkConfig();